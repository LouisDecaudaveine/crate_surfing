generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime
  User              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Playlist {
  playlist_id   String          @id
  user_id       String
  type          Int
  count         Int?            @default(0)
  path          String
  name          String
  track_ids     String[]
  PlaylistTrack PlaylistTrack[]
}

model PlaylistTrack {
  playlistId String
  trackId    String
  Playlist   Playlist @relation(fields: [playlistId], references: [playlist_id])
  Track      Track    @relation(fields: [trackId], references: [track_id])

  @@id([playlistId, trackId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Track {
  track_id      String          @id
  user_id       String
  name          String?         @default("Untitled")
  artist        String?
  album         String?
  kind          String?
  size          BigInt?
  total_time    Int?
  average_bpm   Float?
  date_added    DateTime?
  sample_rate   Int?
  play_count    Int?            @default(0)
  rating        Int?            @default(0)
  location      String?
  tonality      String?
  PlaylistTrack PlaylistTrack[]
}

model User {
  id            String    @id
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime
  Account       Account[]
  Session       Session[]
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}
